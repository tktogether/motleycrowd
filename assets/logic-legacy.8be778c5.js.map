{"version":3,"file":"logic-legacy.8be778c5.js","sources":["../../src/functions/logic.js"],"sourcesContent":["export function exec(exprs, values) {\n    if(!Array.isArray(exprs)) return false;\n    const [expr, ...args] = exprs;\n    let fn;\n    switch(expr) {\n        case '$and': fn = $and; break;\n        case '$or': fn = $or; break;\n        case '$not': fn = $not; break;\n        case '$eq': fn = $eq; break;\n        case '$ne': fn = $ne; break;\n        case '$gt': fn = $gt; break;\n        case '$lt': fn = $lt; break;\n        case '$gte':\n        case '$ge': fn = $ge; break;\n        case '$lte':\n        case '$le': fn = $le; break;\n        case '$in': fn = $in; break;\n        case '$nin': fn = $nin; break;\n\n        // calculate\n        case '$sum':\n        case '$add': fn = $add; break;\n        case '$sub': fn = $sub; break;\n        case '$mul': fn = $mul; break;\n        case '$div': fn = $div; break;\n        case '$mod': fn = $mod; break;\n        case '$pow': fn = $pow; break;\n        case '$abs': fn = $abs; break;\n        case '$ceil': fn = $ceil; break;\n        case '$floor': fn = $floor; break;\n        case '$round': fn = $round; break;\n        case '$sqrt': fn = $sqrt; break;\n        case '$log': fn = $log; break;\n        case '$log10': fn = $log10; break;\n        case '$exp': fn = $exp; break;\n        case '$max': fn = $max; break;\n        case '$min': fn = $min; break;\n        case '$avg': fn = $avg; break;\n        case '$inc': fn = $inc; break;\n        case '$dec': fn = $dec; break;\n    }\n    if(!fn) return false;\n    return fn(args, values);\n}\n\nfunction value(values, v) {\n    if(typeof v === 'string' && v.startsWith('?')) {\n        const key = v.substring(1);\n        return values[key];\n    }\n    if(Array.isArray(v)) {\n        if(typeof v[0] === 'string' && v[0].startsWith('$')) {\n            return exec(v, values);\n        }\n    }\n    return v;\n}\n\nexport function $and(exprs, values) {\n    for(const exp of exprs)\n        if(!exec(exp, values))\n            return false;\n    return true;\n}\n\nexport function $or(exprs, values) {\n    for(const exp of exprs)\n        if(exec(exp, values))\n            return true;\n    return false;\n}\n\nexport function $not(args, values) {\n    return !exec(args, values);\n}\n\nexport function $eq(args, values) {\n    const [a, b] = args;\n    return value(values, a) === value(values, b);\n}\n\nexport function $ne(args, values) {\n    return !$eq(args, values);\n}\n\nexport function $gt(args, values) {\n    const [a, b] = args;\n    return value(values, a) > value(values, b);\n}\n\nexport function $lt(args, values) {\n    const [a, b] = args;\n    return value(values, a) < value(values, b);\n}\n\nexport function $ge(args, values) {\n    const [a, b] = args;\n    return value(values, a) >= value(values, b);\n}\n\nexport function $gte(args, values) {\n    return $ge(args, values);\n}\n\nexport function $le(args, values) {\n    const [a, b] = args;\n    return value(values, a) <= value(values, b);\n}\n\nexport function $lte(args, values) {\n    return $le(args, values);\n}\n\nexport function $in(args, values) {\n    const [a, b] = args;\n    const v = value(values, b);\n    if(Array.isArray(v))\n        return v.includes(value(values, a));\n    return false;\n}\n\nexport function $nin(args, values) {\n    return !$in(args, values);\n}\n\n\n// calculate\n\nexport function $add(args, values) {\n    let sum = 0;\n    for(const arg of args)\n        sum += value(values, arg);\n    return sum;\n}\n\nexport function $sub(args, values) {\n    const [a, ...subs] = args;\n    let sum = value(values, a);\n    for(const arg of subs)\n        sum -= value(values, arg);\n    return sum;\n}\n\nexport function $mul(args, values) {\n    let sum = 1;\n    for(const arg of args)\n        sum *= value(values, arg);\n    return sum;\n}\n\nexport function $div(args, values) {\n    const [a, ...subs] = args;\n    let sum = value(values, a);\n    for(const arg of subs)\n        sum /= value(values, arg);\n    return sum;\n}\n\nexport function $mod(args, values) {\n    const [a, b] = args;\n    return value(values, a) % value(values, b);\n}\n\nexport function $pow(args, values) {\n    const [a, b] = args;\n    return Math.pow(value(values, a), value(values, b));\n}\n\nexport function $abs(args, values) {\n    const [a] = args;\n    return Math.abs(value(values, a));\n}\n\nexport function $ceil(args, values) {\n    const [a] = args;\n    return Math.ceil(value(values, a));\n}\n\nexport function $floor(args, values) {\n    const [a] = args;\n    return Math.floor(value(values, a));\n}\n\nexport function $round(args, values) {\n    const [a] = args;\n    return Math.round(value(values, a));\n}\n\nexport function $sqrt(args, values) {\n    const [a] = args;\n    return Math.sqrt(value(values, a));\n}\n\nexport function $log(args, values) {\n    const [a] = args;\n    return Math.log(value(values, a));\n}\n\nexport function $log10(args, values) {\n    const [a] = args;\n    return Math.log10(value(values, a));\n}\n\nexport function $exp(args, values) {\n    const [a] = args;\n    return Math.exp(value(values, a));\n}\n\nexport function $max(args, values) {\n    let max = -Infinity;\n    for(const arg of args) {\n        const v = value(values, arg);\n        if(v > max)\n            max = v;\n    }\n    return max;\n}\n\nexport function $min(args, values) {\n    let min = Infinity;\n    for(const arg of args) {\n        const v = value(values, arg);\n        if(v < min)\n            min = v;\n    }\n    return min;\n}\n\nexport function $sum(args, values) {\n    return $add(args, values);\n}\n\nexport function $avg(args, values) {\n    return $add(args, values) / args.length;\n}\n\nexport function $inc(args, values) {\n    const [a] = args;\n    return value(values, a) + 1;\n}\n\nexport function $dec(args, values) {\n    const [a] = args;\n    return value(values, a) - 1;\n}"],"names":["exec","exprs","values","Array","isArray","fn","_exprs","_toArray","expr","args","slice","$and","$or","$not","$eq","$ne","$gt","$lt","$ge","$le","$in","$nin","$add","$sub","$mul","$div","$mod","$pow","$abs","$ceil","$floor","$round","$sqrt","$log","$log10","$exp","$max","$min","$avg","$inc","$dec","value","v","startsWith","substring","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","_step2","_iterator2","_args","_slicedToArray","a","b","_args2","_args3","_args4","_args5","_args6","includes","sum","_iterator3","_step3","_step4","_args7","subs","_iterator4","_step5","_iterator5","_step6","_args8","_iterator6","_args9","_args10","Math","pow","abs","ceil","floor","round","sqrt","log","log10","exp","_step7","Infinity","_iterator7","max","_step8","min","_iterator8","length"],"mappings":"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"}