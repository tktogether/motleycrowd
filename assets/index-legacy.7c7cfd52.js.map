{"version":3,"file":"index-legacy.7c7cfd52.js","sources":["../../src/functions/index.js"],"sourcesContent":["export function clone(value) {\n    if(value === null) return null;\n    if(typeof value === 'object') {\n        if(Array.isArray(value)) return value.map(v=>clone(v));\n        if(value instanceof Map) {\n            const map = new Map();\n            value.forEach((v,k)=>map.set(k,clone(v)));\n            return map;\n        }\n        if(value instanceof Set) {\n            const set = new Set();\n            value.forEach(v=>set.add(clone(v)));\n            return set;\n        }\n        if(value instanceof Date) {\n            return new Date(value);\n        }\n        const obj = {};\n        for(const key in value) obj[key] = clone(value[key]);\n        return obj;\n    }\n    return value;\n}\n\nexport function isFunction(value) {\n    return typeof value==\"function\" && !!value.constructor;\n}\n\nexport function listRandom(list) {\n    return list[Math.floor(Math.random() * list.length)];\n}\n\nexport async function delay(min, max) {\n    const time = max? Math.random() * (max - min) + min : min;\n    if(!time) return;\n    await new Promise(resolve => setTimeout(resolve, time));\n}\n\nexport function batch(bpart, time, apart) {\n    let flag = false;\n    const args = {};\n    const fn = async ()=>{\n        if(flag) return;\n        flag = true;\n        const ret = await apart?.(args);\n        await delay(time);\n        if(!flag) return;\n        bpart(ret, args);\n        flag = false;\n    }\n    Object.defineProperties(fn, {\n        flag: { get: ()=>flag, set: f=>{flag=f}},\n    });\n    return fn;\n}\n\nexport function getType(value) {\n    const name = value?.constructor?.name;\n    if(name) return name;\n    const type = Object.prototype.toString.call(value);\n    return type.substring(8, type.length - 1);\n}\n\nexport function equals(a, b) {\n    if(a===b) return true;\n    const ta = getType(a);\n    const tb = getType(b);\n    if(ta!=tb) return false;\n    switch(ta) {\n        case 'Number':\n            if(isNaN(a) && isNaN(b)) return true;\n            return a===b;\n        case 'Array':\n            if(a.length!=b.length) return false;\n            for (let i=a.length; i--;)\n                if(!equals(a[i], b[i]))\n                    return false;\n            return true;\n        case 'Object':\n            for(const key in a)\n                if(!equals(a[key], b[key]))\n                    return false;\n            return true;\n        case 'Set':\n            if(a.size!=b.size) return false;\n            const bm = new Map(b.entries());\n            for(const v of a) {\n                if(b.has(v)) return true;\n                let found = false;\n                for(const [key, value] of bm)\n                    if(equals(v, value)) {\n                        bm.delete(key);\n                        found = true;\n                        break;\n                    }\n                if(!found) return false;\n            }\n            return true;\n        case 'Map':\n            if(a.size!=b.size) return false;\n            for(const [key, value] of a)\n                if(!equals(value, b.get(key)))\n                    return false;\n            return true;\n        case 'Date':\n            return a.getTime() === b.getTime();\n        default:\n            if(a.equals) return a.equals(b);\n            return false;\n    }\n}\n\nexport function objDiff(a, b) {\n    if(a===b) return null;\n    const ta = getType(a);\n    const tb = getType(b);\n    if(ta!=tb) return clone(b);\n    if(ta!='Object') {\n        if(equals(a,b)) return null;\n        return clone(b);\n    }\n    let r = false;\n    const diff = {};\n    const keys = new Set([\n        ...Object.keys(a),\n        ...Object.keys(b),\n    ]);\n    for (const key of keys) {\n        const sa = a[key];\n        const sb = b[key];\n        if(sb==null) {\n            r = true;\n            diff[key] = null;\n            continue;\n        }\n        const sd = objDiff(sa, sb);\n        if(sd===null) continue;\n        r = true;\n        diff[key] = sd;\n    }\n    return r? diff: null;\n}\n\nexport function objUpdate(original, update) {\n    const to = getType(original);\n    const tu = getType(update);\n    if(to!=tu) return update;\n    if(to !== 'Object') return update;\n    for(const key in update) {\n        const u = update[key];\n        if(u===null) {\n            delete original[key];\n            continue;\n        }\n        original[key] = objUpdate(\n            original[key], u\n        );\n    }\n    return original;\n}\n\n/**\n * @param {any} obj\n * @param {number} [depth=Infinity]\n * @param {boolean} [flatArray=false]\n * @return {any}\n */\nexport function flat(obj, depth=Infinity, flatArray=false) {\n    const flat = (o, d)=> {\n        if( d <= 0\n            || typeof o !== 'object'\n            || Array.isArray(o) && !flatArray\n        ) return [o, false];\n\n        const r = {};\n        for (const k in o) {\n            const [v, n] = flat(o[k], d-1);\n            if(!n) {\n                r[k] = v;\n                continue;\n            }\n            for(const s in v)\n                r[`${k}.${s}`] = v[s];\n        }\n        return [r, true];\n    }\n    return flat(obj, depth+1)[0];\n}\n\nexport function format(str, values, ...args) {\n    if(!str || values==null && !args.length)\n        return str;\n    args.unshift(values);\n    if( typeof values != 'object'\n        || values instanceof String\n    ) values=args;\n    let idx = 0;\n    return str.replace(/\\{([0-9A-Za-z]*)\\}/g, (match, p1)=> {\n        if(p1 == '') p1 = idx;\n        idx ++;\n        const rep = values[p1];\n        if(rep != null) return rep;\n        const arg = args[p1];\n        if(arg != null) return arg;\n        return match;\n    });\n}"],"names":["clone","value","_typeof","Array","isArray","map","v","Map","forEach","k","set","Set","add","Date","obj","key","delay","_x","_x2","_delay","apply","this","arguments","_asyncToGenerator","_regeneratorRuntime","mark","min","max","time","Math","random","_context2","next","abrupt","Promise","resolve","setTimeout","stop","_callee2","getType","name","constructor","_value$constructor","type","Object","prototype","toString","call","substring","length","equals","a","b","ta","isNaN","i","size","_step","bm","entries","_iterator","_createForOfIteratorHelper","s","n","done","has","_step2","found","_iterator2","_step2$value","_slicedToArray","delete","err","e","f","_step3","_iterator3","_step3$value","get","getTime","bpart","apart","flag","args","fn","_ref","_context","ret","sent","_callee","defineProperties","depth","undefined","Infinity","flatArray","flat","o","d","r","_flat2","str","values","_len","_key3","unshift","String","idx","replace","match","p1","rep","arg","list","floor","objDiff","tb","_step4","diff","keys","concat","_toConsumableArray","_iterator4","sa","sb","sd","objUpdate","original","update","to","tu","u"],"mappings":"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"}